<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="styles.css" />
    <link rel="stylesheet" media="screen and (max-width: 1280px)" href="smartphone-style.css" />
    <link rel="stylesheet" media="screen and (min-width: 1280px)" href="classic-style.css" />
    
</head>

<body>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="calendar.js"></script>

    <h3>Calendar maps</h3>
    <div id="page">
        <div id="calendar"></div><div id="map"></div>
    </div>
    <div><input type='hidden' id="filter" value=''></input></div>
    <div id="report"></div>
    <script>
        var map;
        var markers = [];
        var datelocations;
        var dates = {};

        function initMap() {
            var paris = { lat: 48.862725, lng: 2.287592000000018 };
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 4,
                center: paris
            });
            var myloc = new google.maps.Marker({
                clickable: false,
                icon: new google.maps.MarkerImage('//maps.gstatic.com/mapfiles/mobile/mobileimgs2.png',
                                                                new google.maps.Size(22,22),
                                                                new google.maps.Point(0,18),
                                                                new google.maps.Point(11,11)),
                shadow: null,
                zIndex: 999,
                map: map
            });

            if (navigator.geolocation) navigator.geolocation.getCurrentPosition(function(pos) {
                var me = new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude);
                myloc.setPosition(me);
                map.setZoom(12);
            }, function(error) {
                // nothing to do.
            });

            $.get('/addresses', function(data) {
                datelocations = data;
                for (var datel in datelocations)
                {
                    if (Array.isArray(datelocations[datel]))
                        dates[datel] = 0;
                    else
                        dates[datel] = 1;
                    for (var i = 0; i < datelocations[datel].length; i++)
                    {
                        var loc = datelocations[datel][i];
                        addMarker(loc, datel);
                    }
                }

                myfunc = function() {
                    var filter = $("#filter").val();
                    $.get("/addresses/filter/" + filter, function(data) {
                        datelocations = data;
                        deleteMarkers();

                        for (var datel in datelocations)
                        {
                            for (var i = 0; i < datelocations[datel].length; i++)
                            {
                                var loc = datelocations[datel][i];
                                addMarker(loc, datel);
                                
                            }
                        }
                    });
                }
                AddCalendar(myfunc, dates);
                var report = "<ul>";
                report += "<li>#dates found: " + Object.keys(dates).length + " / 366</li><ul>";
                var datelist = [];
                for (datel in datelocations)
                {
                    if (Array.isArray(datelocations[datel]))
                        datelist.push("<li>#" + datel + ": " + datelocations[datel].length + "</li>");
                }
                datelist.sort();
                for (var i = 0; i < datelist.length; i++)
                {
                    report += datelist[i];
                }
                report += "</ul></ul>";
                $("#report").html(report);
            });
        }

        function getInfoWindowContent(location, datel) {
            var content = "<h3>"+location.name+"</h3>";
            content += "<div>" + location.city + "</div>";
            content += '<a href="addresses/done/'+ datel + '">Set as done!</a>';
            return content;
        }

        function addMarker(location, datel) {
            var marker = new google.maps.Marker({
                position: new google.maps.LatLng(location.lat, location.lon),
                map: map
            });
            markers.push(marker);
            addMarkerListener(getInfoWindowContent(location, datel), marker);
        }
        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers() {
            setMapOnAll(null);
        }

        // Shows any markers currently in the array.
        function showMarkers() {
            setMapOnAll(map);
        }

        // Deletes all markers in the array by removing references to them.
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }
        

        function addMarkerListener(content, marker) {
            google.maps.event.addListener(marker, 'click', (function (marker, content) {
                        return function () {
                            var infowindow = new google.maps.InfoWindow();
                            infowindow.setContent(content);
                            infowindow.open(map, marker);
                        }
                    })(marker, content));
        }
           
        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers() {
            setMapOnAll(null);
        }

        // Shows any markers currently in the array.
        function showMarkers() {
            setMapOnAll(map);
        }

        // Deletes all markers in the array by removing references to them.
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }
        
    </script>
    
    
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCAfh6gypdAxCtsg-UwtW3Q-4gCyGE2U2s&callback=initMap">
    </script>
</body>

</html>